# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.active_currency_and_amount_simple_type import ActiveCurrencyAndAmountSimpleType  # noqa: F401,E501
from swagger_server.models.frequency_type import FrequencyType  # noqa: F401,E501
from swagger_server.models.rate import Rate  # noqa: F401,E501
import re  # noqa: F401,E501
from swagger_server import util


class FeeChargeDetail(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, fee_amount: ActiveCurrencyAndAmountSimpleType=None, fee_rate: Rate=None, application_frequency: FrequencyType=None, calculation_frequency: FrequencyType=None):  # noqa: E501
        """FeeChargeDetail - a model defined in Swagger

        :param fee_amount: The fee_amount of this FeeChargeDetail.  # noqa: E501
        :type fee_amount: ActiveCurrencyAndAmountSimpleType
        :param fee_rate: The fee_rate of this FeeChargeDetail.  # noqa: E501
        :type fee_rate: Rate
        :param application_frequency: The application_frequency of this FeeChargeDetail.  # noqa: E501
        :type application_frequency: FrequencyType
        :param calculation_frequency: The calculation_frequency of this FeeChargeDetail.  # noqa: E501
        :type calculation_frequency: FrequencyType
        """
        self.swagger_types = {
            'fee_amount': ActiveCurrencyAndAmountSimpleType,
            'fee_rate': Rate,
            'application_frequency': FrequencyType,
            'calculation_frequency': FrequencyType
        }

        self.attribute_map = {
            'fee_amount': 'feeAmount',
            'fee_rate': 'feeRate',
            'application_frequency': 'applicationFrequency',
            'calculation_frequency': 'calculationFrequency'
        }
        self._fee_amount = fee_amount
        self._fee_rate = fee_rate
        self._application_frequency = application_frequency
        self._calculation_frequency = calculation_frequency

    @classmethod
    def from_dict(cls, dikt) -> 'FeeChargeDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FeeChargeDetail of this FeeChargeDetail.  # noqa: E501
        :rtype: FeeChargeDetail
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fee_amount(self) -> ActiveCurrencyAndAmountSimpleType:
        """Gets the fee_amount of this FeeChargeDetail.


        :return: The fee_amount of this FeeChargeDetail.
        :rtype: ActiveCurrencyAndAmountSimpleType
        """
        return self._fee_amount

    @fee_amount.setter
    def fee_amount(self, fee_amount: ActiveCurrencyAndAmountSimpleType):
        """Sets the fee_amount of this FeeChargeDetail.


        :param fee_amount: The fee_amount of this FeeChargeDetail.
        :type fee_amount: ActiveCurrencyAndAmountSimpleType
        """

        self._fee_amount = fee_amount

    @property
    def fee_rate(self) -> Rate:
        """Gets the fee_rate of this FeeChargeDetail.


        :return: The fee_rate of this FeeChargeDetail.
        :rtype: Rate
        """
        return self._fee_rate

    @fee_rate.setter
    def fee_rate(self, fee_rate: Rate):
        """Sets the fee_rate of this FeeChargeDetail.


        :param fee_rate: The fee_rate of this FeeChargeDetail.
        :type fee_rate: Rate
        """

        self._fee_rate = fee_rate

    @property
    def application_frequency(self) -> FrequencyType:
        """Gets the application_frequency of this FeeChargeDetail.


        :return: The application_frequency of this FeeChargeDetail.
        :rtype: FrequencyType
        """
        return self._application_frequency

    @application_frequency.setter
    def application_frequency(self, application_frequency: FrequencyType):
        """Sets the application_frequency of this FeeChargeDetail.


        :param application_frequency: The application_frequency of this FeeChargeDetail.
        :type application_frequency: FrequencyType
        """

        self._application_frequency = application_frequency

    @property
    def calculation_frequency(self) -> FrequencyType:
        """Gets the calculation_frequency of this FeeChargeDetail.


        :return: The calculation_frequency of this FeeChargeDetail.
        :rtype: FrequencyType
        """
        return self._calculation_frequency

    @calculation_frequency.setter
    def calculation_frequency(self, calculation_frequency: FrequencyType):
        """Sets the calculation_frequency of this FeeChargeDetail.


        :param calculation_frequency: The calculation_frequency of this FeeChargeDetail.
        :type calculation_frequency: FrequencyType
        """
        if calculation_frequency is None:
            raise ValueError("Invalid value for `calculation_frequency`, must not be `None`")  # noqa: E501

        self._calculation_frequency = calculation_frequency
