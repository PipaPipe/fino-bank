# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
import re  # noqa: F401,E501
from swagger_server import util


class TrackData1(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, track_number: str=None, track_value: str=None):  # noqa: E501
        """TrackData1 - a model defined in Swagger

        :param track_number: The track_number of this TrackData1.  # noqa: E501
        :type track_number: str
        :param track_value: The track_value of this TrackData1.  # noqa: E501
        :type track_value: str
        """
        self.swagger_types = {
            'track_number': str,
            'track_value': str
        }

        self.attribute_map = {
            'track_number': 'trackNumber',
            'track_value': 'trackValue'
        }
        self._track_number = track_number
        self._track_value = track_value

    @classmethod
    def from_dict(cls, dikt) -> 'TrackData1':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TrackData1 of this TrackData1.  # noqa: E501
        :rtype: TrackData1
        """
        return util.deserialize_model(dikt, cls)

    @property
    def track_number(self) -> str:
        """Gets the track_number of this TrackData1.

        Номер дорожки карты  # noqa: E501

        :return: The track_number of this TrackData1.
        :rtype: str
        """
        return self._track_number

    @track_number.setter
    def track_number(self, track_number: str):
        """Sets the track_number of this TrackData1.

        Номер дорожки карты  # noqa: E501

        :param track_number: The track_number of this TrackData1.
        :type track_number: str
        """

        self._track_number = track_number

    @property
    def track_value(self) -> str:
        """Gets the track_value of this TrackData1.

        Содержание дорожки карты или его эквивалент  # noqa: E501

        :return: The track_value of this TrackData1.
        :rtype: str
        """
        return self._track_value

    @track_value.setter
    def track_value(self, track_value: str):
        """Sets the track_value of this TrackData1.

        Содержание дорожки карты или его эквивалент  # noqa: E501

        :param track_value: The track_value of this TrackData1.
        :type track_value: str
        """

        self._track_value = track_value
