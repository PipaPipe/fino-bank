# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.data_transaction_response import DataTransactionResponse  # noqa: F401,E501
from swagger_server import util


class TransactionResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, data: DataTransactionResponse=None):  # noqa: E501
        """TransactionResponse - a model defined in Swagger

        :param data: The data of this TransactionResponse.  # noqa: E501
        :type data: DataTransactionResponse
        """
        self.swagger_types = {
            'data': DataTransactionResponse
        }

        self.attribute_map = {
            'data': 'Data'
        }
        self._data = data

    @classmethod
    def from_dict(cls, dikt) -> 'TransactionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TransactionResponse of this TransactionResponse.  # noqa: E501
        :rtype: TransactionResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self) -> DataTransactionResponse:
        """Gets the data of this TransactionResponse.


        :return: The data of this TransactionResponse.
        :rtype: DataTransactionResponse
        """
        return self._data

    @data.setter
    def data(self, data: DataTransactionResponse):
        """Sets the data of this TransactionResponse.


        :param data: The data of this TransactionResponse.
        :type data: DataTransactionResponse
        """
        if data is None:
            raise ValueError("Invalid value for `data`, must not be `None`")  # noqa: E501

        self._data = data
